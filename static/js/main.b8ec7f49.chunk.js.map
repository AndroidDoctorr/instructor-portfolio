{"version":3,"sources":["images/me.jpg","images/highpoint3.png","images/code-similarity.png","images/vericite-report.png","images/rick-and-morty.png","images/agile-project.png","images/scratch-1.png","images/legoteam.png","contents.js","components/HeaderBar.js","components/Section.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","projects","shortTitle","title","images","src","require","alt","description","links","text","evaluations","curriculum","href","placements","other","HeaderBar","props","Navbar","className","expand","fixed","Brand","Toggle","aria-controls","Collapse","id","Nav","activeClass","to","spy","smooth","duration","Object","keys","contents","map","key","Section","length","Carousel","image","Item","Caption","content","link","target","rel","App","me","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b8ec7f49.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/me.4f45fd10.jpg\";","module.exports = __webpack_public_path__ + \"static/media/highpoint3.0fab2009.png\";","module.exports = __webpack_public_path__ + \"static/media/code-similarity.629d8f88.png\";","module.exports = __webpack_public_path__ + \"static/media/vericite-report.9a832d65.png\";","module.exports = __webpack_public_path__ + \"static/media/rick-and-morty.3a31ea87.png\";","module.exports = __webpack_public_path__ + \"static/media/agile-project.0fe67d4d.png\";","module.exports = __webpack_public_path__ + \"static/media/scratch-1.fb10c197.png\";","module.exports = __webpack_public_path__ + \"static/media/legoteam.47d182fd.png\";","export default {\r\n  projects: {\r\n    shortTitle: \"Projects\",\r\n    title: \"Projects and certifications\",\r\n    images: [\r\n      {\r\n        src: require('./images/highpoint3.png'),\r\n        alt: \"HighPoint Global\",\r\n        description: \"A PHP survey site I built for HighPoint Global in 2016 through ElevenFifty Consulting.\",\r\n      },\r\n      {\r\n        src: require('./images/code-similarity.png'),\r\n        alt: \"Gradescope Code Similarity\",\r\n        description: \"The implementation of MOSS code similarity in Gradescope\",\r\n      },\r\n      {\r\n        src: require('./images/vericite-report.png'),\r\n        alt: \"VeriCite\",\r\n        description: \"The report page from the VeriCite UI\",\r\n      },\r\n    ],\r\n    links: [],\r\n    text: \"I have contributed to a number of projects inside and outside of Eleven Fifty. Through EFC I worked on Android apps like iLikey/Do, JeansFit, FitLivin, and PHP projects for HighPoint Global and the Indianapolis Real Estate Vendor Fair. In my professional career, I’ve mostly done UI development in React and Ruby on Rails with some back-end development and integration in Java for VeriCite, Turnitin, and Gradescope (another Turnitin acquisition). I have also developed a number of mobile apps on my own in both Android and react-native, including a fully-functional interactive mapping application I call GeoPad.\",\r\n  },\r\n  evaluations: {\r\n    shortTitle: \"Evaluations\",\r\n    title: \"Student/peer evaluations\",\r\n    images: [],\r\n    links: [],\r\n    text: \"I haven’t seen the results on paper for myself yet, I have requested and am waiting on evaluations. But I have heard plenty of positive feedback from my students, and the results speak for themselves as well. My students have gone on to build some impressive coding projects, and also to become effective ElevenFifty Learning Assistants.\",\r\n  },\r\n  curriculum: {\r\n    shortTitle: \"Curriculum\",\r\n    title: \"Contributions to curriculum\",\r\n    images: [\r\n      {\r\n        src: require('./images/rick-and-morty.png'),\r\n        alt: \"Rick and Morty module\",\r\n        description: \"A module I created for Gold Badge to illustrate the basics of C# in a console game app\",\r\n      },\r\n      {\r\n        src: require('./images/agile-project.png'),\r\n        alt: \"Agile Project\",\r\n        description: \"A Blue Badge project I designed based on my experience using Agile professionally\",\r\n      },\r\n    ],\r\n    links: [\r\n      {\r\n        href: \"https://elevenfifty.instructure.com/courses/203/pages/rick-and-morty-0-dot-0-introduction?module_item_id=16757\",\r\n        text: \"Rick and Morty Module\",\r\n      },\r\n      {\r\n        href: \"https://elevenfifty.instructure.com/courses/200/assignments/3092\",\r\n        text: \"24 Hour API Assignment\",\r\n      },\r\n      {\r\n        href: \"https://elevenfifty.instructure.com/courses/200/assignments/5413\",\r\n        text: \"Agile Project\",\r\n      },\r\n      {\r\n        href: \"https://vimeo.com/452366989\",\r\n        text: \"MVC Videos on Vimeo (#1)\",\r\n      },\r\n    ],\r\n    text: \"I have made many contributions to curriculum development already. I created a number of modules, including a Rick and Morty console app for students to practice console apps as well as contributing to a GitHub repository via pull requests, a 24-hour project for Blue Badge to practice building an API, and another Blue Badge project that implements Agile techniques. I have also updated, corrected, and/or streamlined other modules for all three badges. I’ve also recorded and uploaded a number of videos to the EFA vimeo channel with some supplementary Red Badge lessons.\",\r\n  },\r\n  placements: {\r\n    shortTitle: \"Placements\",\r\n    title: \"Student placements and assessments\",\r\n    images: [],\r\n    links: [],\r\n    text: \"I have requested and am waiting for information about technical assessments and placement rates from my classes.\",\r\n  },\r\n  other: {\r\n    shortTitle: \"Other\",\r\n    title: \"Outside work/teaching\",\r\n    images: [\r\n      {\r\n        src: require('./images/scratch-1.png'),\r\n        alt: \"MIT's Scratch\",\r\n        description: \"Some code from MIT's Scratch, an online tool for teaching the basics of coding using simple visual elements\",\r\n      },\r\n      {\r\n        src: require('./images/legoteam.png'),\r\n        alt: \"LEGO Robotics Team\",\r\n        description: \"The Orchard School 5th grade LEGO robotics team competing in 2014\",\r\n      },\r\n    ],\r\n    links: [],\r\n    text: \"Before I came to EFA as a student in 2015, I was a technology teacher at the Orchard School, where I taught fifth and seventh grade students basic coding through code.org and mit.scratch.edu. I wrote quizzes and tests, graded projects, and gave lectures about the basics of coding. I also led the Orchard LEGO robotics team, which won an award for most creative solutions. I have also led public coding seminars for children as a volunteer through EFA (in a partnership with Barnes and Noble in 2016).\",\r\n  },\r\n}\r\n","import React from 'react';\r\nimport {Navbar, Nav} from 'react-bootstrap';\r\nimport contents from '../contents';\r\nimport {Link} from 'react-scroll';\r\n\r\nexport default function HeaderBar(props) {\r\n  return (\r\n    <Navbar className=\"red1150\" expand=\"lg\" fixed=\"top\">\r\n      <Navbar.Brand href=\"#home\">Andrew Torr</Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n      <Navbar.Collapse id=\"basic-navbar-nav\">\r\n        <Nav className=\"mr-auto\">\r\n          <Link activeClass=\"active\" to=\"home\" spy={true} smooth={true} duration={1000}>Home</Link>\r\n          {Object.keys(contents).map(key =>\r\n            <Link to={key} spy={true} smooth={true} duration={1000}>\r\n              {contents[key].shortTitle}\r\n            </Link>\r\n          )}\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport {Carousel} from 'react-bootstrap';\r\n\r\nexport default function Section(props) {\r\n  return (\r\n    <div className=\"section\" id={props.id}>\r\n      <h3>\r\n        {props.title}\r\n      </h3>\r\n      {!!props.images.length &&\r\n        <Carousel className=\"\">\r\n          {props.images.map(image =>\r\n            <Carousel.Item>\r\n              <img\r\n                className=\"d-block w-100\"\r\n                src={image.src}\r\n                alt={image.alt}\r\n              />\r\n              <Carousel.Caption>\r\n                <h3>{image.alt}</h3>\r\n                <p>{image.description}</p>\r\n              </Carousel.Caption>\r\n            </Carousel.Item>\r\n          )}\r\n        </Carousel>\r\n      }\r\n      <p className=\"text-md-left\">\r\n        {props.content}\r\n      </p>\r\n      {!!props.links &&\r\n        <ul>\r\n          {props.links.map(link =>\r\n            <li className=\"linkItem\">\r\n              <a href={link.href} target=\"_blank\" rel=\"noopener noreferrer\">{link.text}</a>\r\n            </li>\r\n          )}\r\n        </ul>\r\n      }\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\nimport HeaderBar from './components/HeaderBar';\nimport Section from './components/Section';\nimport './App.css';\nimport contents from './contents';\nimport me from './images/me.jpg';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <HeaderBar />\n      <div className=\"sections container mt-4\">\n      <div className=\"section\" id=\"home\">\n        <div className=\"mb-2\">\n          <img src={me} alt=\"\" />\n        </div>\n        <h1>Andrew Torr</h1>\n        <h2>Software Development Instructor</h2>\n      </div>\n      {Object.keys(contents).map(key =>\n        <Section\n          id={key}\n          title={contents[key].title}\n          content={contents[key].text}\n          images={contents[key].images}\n          links={contents[key].links}\n        />\n      )}\n      </div>\n      <div className=\"section\" id=\"source\">\n        <a\n          href=\"https://github.com/AndroidDoctorr/instructor-portfolio\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          The source code for this project\n        </a>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}